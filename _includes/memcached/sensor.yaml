---
apiVersion: argoproj.io/v1alpha1
kind: Sensor
metadata:
  name: memcached-sensor
spec:
  template:
    serviceAccountName: memcached-sa
  dependencies:
    - name: source-dependency
      # References the metadata.name in the event source
      eventSourceName: memcached-source
      # References the key directly under "resource:" in the event source
      eventName: memcached
  triggers:
    - template:
        name: argo-workflow-trigger
        argoWorkflow:
          operation: submit
          source:
            resource:
              apiVersion: argoproj.io/v1alpha1
              kind: Workflow
              metadata:
                generateName: deploy-memcached-workflow-
              spec:
                serviceAccountName: memcached-sa
                entrypoint: deploy-memcached-template
                arguments:
                  parameters:
                    # These values get overridden, see the `parameters` below
                    - name: message
                      value: ""
                    - name: replicas
                      # Parameters are always string values
                      value: "1"
                    - name: operation
                      value: ""
                templates:
                  - name: deploy-memcached-template
                    steps:
                      # `steps` may look a little funky, as lists of lists:
                      # the outer lists are run sequentially, the inner ones
                      # in parallel
                      - - name: call-template
                          # We call the template reference listed under `name`,
                          # from the template onwards listed under `template`
                          templateRef:
                            name: memcached-deploy-workflow-template
                            template: main

          # These are the parameters of what data gets selected from the event bus
          # message into the resource generated by the sensor
          parameters:
            - src:
                dependencyName: source-dependency
                # This is the message body, used for logging
                dataKey: body
              dest: spec.arguments.parameters.0.value
            - src:
                dependencyName: source-dependency
                # This is the `size` parameter, the main input
                # to the custom resource definition
                dataKey: body.spec.size
              dest: spec.arguments.parameters.1.value
            - src:
                dependencyName: source-dependency
                # This is the `operation` parameter to the workflow,
                # one of ADD, UPDATE, or DELETE, covering the entire life cycle
                dataKey: type
              dest: spec.arguments.parameters.2.value
